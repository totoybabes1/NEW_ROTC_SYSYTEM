# Generated by Django 5.1.7 on 2025-04-03 01:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExcelUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('total_records', models.IntegerField(default=0)),
                ('processed', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='FlightGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('is_event', models.BooleanField(default=False)),
                ('event_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('flight_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='myapp.flightgroup')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('student_id', models.CharField(max_length=100)),
                ('age', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=100)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('profile_picture', models.ImageField(blank=True, upload_to='member_pics/')),
                ('gender_assignment', models.CharField(blank=True, max_length=100, null=True)),
                ('flight_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.flightgroup')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True)),
                ('profile_picture', models.ImageField(blank=True, upload_to='profile_pics/')),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('activity_log', models.JSONField(blank=True, default=list)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SemesterYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(choices=[('1ST', 'First Semester'), ('2ND', 'Second Semester'), ('SUM', 'Summer')], max_length=3)),
                ('academic_year', models.CharField(max_length=9)),
                ('is_active', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-academic_year', 'semester'],
                'unique_together': {('semester', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='StudentRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_no', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('course', models.CharField(max_length=20)),
                ('year', models.IntegerField()),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='ACTIVE', max_length=10)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('semester_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.semesteryear')),
            ],
            options={
                'ordering': ['student_no'],
            },
        ),
        migrations.CreateModel(
            name='StudentActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('cdt_sign', models.CharField(blank=True, max_length=100, null=True)),
                ('activity', models.TextField()),
                ('merits', models.IntegerField(default=0)),
                ('demerits', models.IntegerField(default=0)),
                ('fl_sign', models.CharField(blank=True, max_length=100, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('personnel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.personnel')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='myapp.studentrecord')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='StudentSpecialCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_type', models.CharField(choices=[('band', 'Band Member'), ('office', 'Office Worker'), ('other_gender', 'Other Gender Preference')], max_length=20)),
                ('handler_name', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('handler', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_special_cases', to='myapp.personnel')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='special_case', to='myapp.studentrecord')),
            ],
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('admin', 'Administrator'), ('personnel', 'Personnel'), ('student', 'Student')], max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventFlightGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_flight_groups', to='myapp.announcement')),
                ('flight_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_groups', to='myapp.flightgroup')),
            ],
            options={
                'unique_together': {('event', 'flight_group')},
            },
        ),
        migrations.CreateModel(
            name='StudentGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(max_length=50)),
                ('attendance_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('military_aptitude', models.DecimalField(decimal_places=2, max_digits=5)),
                ('subject_proficiency', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_grade', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date_computed', models.DateTimeField(auto_now_add=True)),
                ('personnel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.personnel')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='myapp.studentrecord')),
            ],
            options={
                'ordering': ['-date_computed'],
                'unique_together': {('student', 'period')},
            },
        ),
        migrations.CreateModel(
            name='StudentAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('excused', 'Excused')], max_length=10)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('personnel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.personnel')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='myapp.studentrecord')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('student', 'personnel', 'date')},
            },
        ),
        migrations.CreateModel(
            name='PersonnelStudentAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_date', models.DateTimeField(auto_now_add=True)),
                ('personnel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_students', to='myapp.personnel')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_personnel', to='myapp.studentrecord')),
            ],
            options={
                'ordering': ['personnel__last_name', 'student__name'],
                'unique_together': {('student',)},
            },
        ),
    ]
